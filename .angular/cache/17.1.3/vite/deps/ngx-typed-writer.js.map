{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-typed-writer/fesm2022/ngx-typed-writer.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, Inject, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\n\n/* name of class with animation fade out */\nconst _c0 = [\"typedText\"];\nconst _c1 = [\"cursorRef\"];\nfunction NgxTypedWriterComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2, 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.cursorChar, \" \");\n  }\n}\nconst FADE_OUT_CLASS = 'typed-fade-out';\n\n/**\n * The function `typeHtmlChars` is used to skip over HTML characters in a string if the `isHTML` flag\n * is set to true.\n * @param {boolean} isHTML - A boolean value indicating whether the current string contains HTML\n * characters.\n * @param {string} currentString - The current string that needs to be processed. It can contain HTML\n * characters that need to be skipped over.\n * @param {number} currentStringPosition - The current position in the string that is being processed.\n * @returns the updated value of `currentStringPosition`.\n */\nfunction typeHtmlChars(isHTML, currentString, currentStringPosition) {\n  if (!isHTML) return currentStringPosition;\n  const currentCharacter = currentString.substring(currentStringPosition).charAt(0);\n  if (currentCharacter === '<' || currentCharacter === '&') {\n    let endTag = '';\n    if (currentCharacter === '<') {\n      endTag = '>';\n    } else {\n      endTag = ';';\n    }\n    while (currentString.substring(currentStringPosition + 1).charAt(0) !== endTag) {\n      currentStringPosition++;\n      if (currentStringPosition + 1 > currentString.length) {\n        break;\n      }\n    }\n    currentStringPosition++;\n  }\n  return currentStringPosition;\n}\n/**\n * The function `backSpaceHtmlChars` is a function that takes in a boolean `isHTML`, a\n * string `currentString`, and a number `currentStringPosition`, and returns a new number representing\n * the updated `currentStringPosition` after removing HTML characters.\n * @param {boolean} isHTML - A boolean value indicating whether the current string contains HTML\n * characters or not.\n * @param {string} currentString - The `currentString` parameter is a string that represents the\n * current text or HTML content.\n * @param {number} currentStringPosition - The current position within the current string.\n * @returns the updated value of `currentStringPosition`.\n */\nfunction backSpaceHtmlChars(isHTML, currentString, currentStringPosition) {\n  if (!isHTML) return currentStringPosition;\n  const currentCharacter = currentString.substring(currentStringPosition).charAt(0);\n  if (currentCharacter === '>' || currentCharacter === ';') {\n    let endTag = '';\n    if (currentCharacter === '>') {\n      endTag = '<';\n    } else {\n      endTag = '&';\n    }\n    while (currentString.substring(currentStringPosition - 1).charAt(0) !== endTag) {\n      currentStringPosition--;\n      if (currentStringPosition < 0) {\n        break;\n      }\n    }\n    currentStringPosition--;\n  }\n  return currentStringPosition;\n}\n/**\n * The function `shuffleStringsIfNeeded` shuffles an array of strings if a boolean flag is set to true,\n * otherwise it returns the original array.\n * @param {boolean} shuffle - A boolean value indicating whether the strings should be shuffled or not.\n * @param {string[]} strings - An array of strings that need to be shuffled if the `shuffle` parameter\n * is set to `true`.\n * @returns an array of strings. If the `shuffle` parameter is `false`, it returns the original\n * `strings` array. If `shuffle` is `true`, it returns a shuffled version of the `strings` array.\n */\nfunction shuffleStringsIfNeeded(shuffle, strings) {\n  if (!shuffle) return strings;\n  return strings.sort(() => Math.random() - 0.5);\n}\nclass NgxTypedWriterComponent {\n  constructor(platformId, renderer2) {\n    this.platformId = platformId;\n    this.renderer2 = renderer2;\n    this.strings = [];\n    this.typeSpeed = 40;\n    this.startDelay = 0;\n    this.backSpeed = 40;\n    this.smartBackspace = false;\n    this.shuffle = false;\n    this.backDelay = 1000;\n    this.isHTML = false;\n    this.fadeOut = false;\n    this.loop = true;\n    this.showCursor = true;\n    this.cursorChar = '|';\n    this.fadeOutDelay = 500;\n    this.currentStringIndex = 0;\n    this.currentString = '';\n    this.currentStringPosition = 0;\n    this.isTypingPaused = false;\n    this.stopNum = 0;\n    this.destroy = new EventEmitter();\n    this.initTyped = new EventEmitter();\n    this.completeLoop = new EventEmitter();\n  }\n  ngOnInit() {\n    isPlatformBrowser(this.platformId) && this.init();\n  }\n  ngOnDestroy() {\n    clearTimeout(this.timeout);\n    this.destroy.emit();\n  }\n  init() {\n    this.strings = shuffleStringsIfNeeded(this.shuffle, this.strings);\n    this.currentString = this.strings[this.currentStringIndex];\n    this.timeout = setTimeout(() => {\n      this.typeString();\n      this.initTyped.emit();\n    }, this.startDelay);\n  }\n  typeString() {\n    if (this.isTypingPaused) return;\n    if (this.fadeOut) {\n      const typedElement = this.typedTextRef.nativeElement;\n      this.renderer2.removeClass(typedElement, FADE_OUT_CLASS);\n      if (this.showCursor) {\n        const cursorElement = this.cursor?.nativeElement;\n        this.renderer2.removeClass(cursorElement, FADE_OUT_CLASS);\n      }\n    }\n    if (this.currentStringPosition < this.currentString.length) {\n      this.typeCharacter();\n    } else {\n      this.isTypingPaused = true;\n      this.timeout = setTimeout(() => {\n        this.isTypingPaused = false;\n        this.timeout = setTimeout(() => {\n          this.backspaceString();\n        }, this.backDelay);\n      }, this.typeSpeed);\n    }\n  }\n  typeCharacter() {\n    this.timeout = setTimeout(() => {\n      this.currentStringPosition = typeHtmlChars(this.isHTML, this.currentString, this.currentStringPosition);\n      const nextString = this.currentString.substring(0, this.currentStringPosition + 1);\n      const lastItem = this.strings.at(-1);\n      this.typedTextRef.nativeElement.innerHTML = nextString;\n      this.currentStringPosition++;\n      if (nextString === lastItem && !this.loop) {\n        this.completeLoop.emit();\n        return;\n      }\n      this.typeString();\n    }, this.typeSpeed);\n  }\n  backspaceString() {\n    if (this.isTypingPaused) return;\n    if (this.fadeOut) {\n      this.initFadeOut();\n      return;\n    }\n    if (this.currentStringPosition > this.stopNum) {\n      this.backspaceCharacter();\n    } else {\n      this.isTypingPaused = true;\n      this.timeout = setTimeout(() => {\n        this.isTypingPaused = false;\n        this.currentStringIndex++;\n        if (this.currentStringIndex >= this.strings.length) {\n          if (this.loop) {\n            this.currentStringIndex = 0;\n            // this.typeString();\n          } else {\n            return; // Finished typing all strings\n          }\n        }\n        this.currentString = this.strings[this.currentStringIndex];\n        this.timeout = setTimeout(() => {\n          this.typeString();\n        }, this.typeSpeed);\n      }, this.typeSpeed);\n    }\n  }\n  backspaceCharacter() {\n    const currentString = this.typedTextRef.nativeElement.innerHTML;\n    this.currentStringPosition = backSpaceHtmlChars(this.isHTML, this.currentString, this.currentStringPosition);\n    const curStringAtPosition = currentString.substring(0, this.currentStringPosition);\n    this.typedTextRef.nativeElement.innerHTML = curStringAtPosition;\n    this.timeout = setTimeout(() => {\n      //  if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        const nextStringPartial = this.strings[this.currentStringIndex + 1];\n        const compare = curStringAtPosition === nextStringPartial?.substring(0, this.currentStringPosition);\n        if (nextStringPartial && compare) {\n          this.stopNum = this.currentStringPosition - 1;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n      if (this.currentStringPosition > this.stopNum) {\n        // subtract characters one by one\n        this.currentStringPosition--;\n        // loop the function\n        this.backspaceString();\n      } else if (this.currentStringPosition <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.currentStringIndex++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.currentStringIndex === this.strings.length) {\n          this.currentStringIndex = 0;\n        }\n        this.typeString();\n      }\n    }, this.backSpeed);\n  }\n  initFadeOut() {\n    const typedElement = this.typedTextRef.nativeElement;\n    this.renderer2.addClass(typedElement, FADE_OUT_CLASS);\n    if (this.showCursor) {\n      const cursorElement = this.cursor.nativeElement;\n      this.renderer2.addClass(cursorElement, FADE_OUT_CLASS);\n    }\n    this.timeout = setTimeout(() => {\n      this.currentStringIndex++;\n      typedElement.innerHTML = '';\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.currentStringIndex) {\n        this.currentStringPosition = 0;\n        this.currentString = this.strings[this.currentStringIndex];\n        this.typeString();\n      } else {\n        this.currentStringPosition = 0;\n        this.currentStringIndex = 0;\n        this.currentString = this.strings[this.currentStringIndex];\n        this.typeString(); // this.currentStringIndex++;\n      }\n    }, this.fadeOutDelay);\n  }\n  static {\n    this.ɵfac = function NgxTypedWriterComponent_Factory(t) {\n      return new (t || NgxTypedWriterComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgxTypedWriterComponent,\n      selectors: [[\"ngx-typed-writer\"]],\n      viewQuery: function NgxTypedWriterComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.typedTextRef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cursor = _t.first);\n        }\n      },\n      inputs: {\n        strings: \"strings\",\n        typeSpeed: \"typeSpeed\",\n        startDelay: \"startDelay\",\n        backSpeed: \"backSpeed\",\n        smartBackspace: \"smartBackspace\",\n        shuffle: \"shuffle\",\n        backDelay: \"backDelay\",\n        isHTML: \"isHTML\",\n        fadeOut: \"fadeOut\",\n        loop: \"loop\",\n        showCursor: \"showCursor\",\n        cursorChar: \"cursorChar\",\n        fadeOutDelay: \"fadeOutDelay\"\n      },\n      outputs: {\n        destroy: \"destroy\",\n        initTyped: \"initTyped\",\n        completeLoop: \"completeLoop\"\n      },\n      decls: 3,\n      vars: 1,\n      consts: [[\"typedText\", \"\"], [\"class\", \"typing-cursor\", 4, \"ngIf\"], [1, \"typing-cursor\"], [\"cursorRef\", \"\"]],\n      template: function NgxTypedWriterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"span\", null, 0);\n          i0.ɵɵtemplate(2, NgxTypedWriterComponent_span_2_Template, 3, 1, \"span\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.showCursor);\n        }\n      },\n      dependencies: [i1.NgIf],\n      styles: [\".typing-cursor[_ngcontent-%COMP%]{-webkit-animation:_ngcontent-%COMP%_blink .7s infinite;display:inline-block;opacity:1;animation:_ngcontent-%COMP%_blink .7s infinite}@keyframes _ngcontent-%COMP%_blink{0%{opacity:1}50%{opacity:0}to{opacity:1}}.typed-fade-out[_ngcontent-%COMP%]{opacity:0;transition:opacity .25s}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxTypedWriterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-typed-writer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <span #typedText> </span>\n    <span #cursorRef class=\"typing-cursor\" *ngIf=\"showCursor\"\n      >{{ cursorChar }}\n    </span>\n  `,\n      styles: [\".typing-cursor{-webkit-animation:blink .7s infinite;display:inline-block;opacity:1;animation:blink .7s infinite}@keyframes blink{0%{opacity:1}50%{opacity:0}to{opacity:1}}.typed-fade-out{opacity:0;transition:opacity .25s}\\n\"]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.Renderer2\n  }], {\n    typedTextRef: [{\n      type: ViewChild,\n      args: ['typedText', {\n        static: true\n      }]\n    }],\n    cursor: [{\n      type: ViewChild,\n      args: ['cursorRef']\n    }],\n    strings: [{\n      type: Input\n    }],\n    typeSpeed: [{\n      type: Input\n    }],\n    startDelay: [{\n      type: Input\n    }],\n    backSpeed: [{\n      type: Input\n    }],\n    smartBackspace: [{\n      type: Input\n    }],\n    shuffle: [{\n      type: Input\n    }],\n    backDelay: [{\n      type: Input\n    }],\n    isHTML: [{\n      type: Input\n    }],\n    fadeOut: [{\n      type: Input\n    }],\n    loop: [{\n      type: Input\n    }],\n    showCursor: [{\n      type: Input\n    }],\n    cursorChar: [{\n      type: Input\n    }],\n    fadeOutDelay: [{\n      type: Input\n    }],\n    destroy: [{\n      type: Output\n    }],\n    initTyped: [{\n      type: Output\n    }],\n    completeLoop: [{\n      type: Output\n    }]\n  });\n})();\nclass NgxTypedWriterModule {\n  static {\n    this.ɵfac = function NgxTypedWriterModule_Factory(t) {\n      return new (t || NgxTypedWriterModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgxTypedWriterModule,\n      declarations: [NgxTypedWriterComponent],\n      imports: [CommonModule],\n      exports: [NgxTypedWriterComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxTypedWriterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgxTypedWriterComponent],\n      exports: [NgxTypedWriterComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxTypedWriterComponent, NgxTypedWriterModule };\n"],
  "mappings": "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",
  "names": []
}
